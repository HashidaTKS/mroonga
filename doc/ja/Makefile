# Makefile.in generated by automake 1.11.1 from Makefile.am.
# doc/ja/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/groonga-storage-engine
pkgincludedir = $(includedir)/groonga-storage-engine
pkglibdir = $(libdir)/groonga-storage-engine
pkglibexecdir = $(libexecdir)/groonga-storage-engine
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = doc/ja
DIST_COMMON = $(am__nobase_dist_doc_ja_DATA_DIST) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
am__nobase_dist_doc_ja_DATA_DIST = source/characteristic.rst \
	source/conf.py source/developer.rst source/index.rst \
	source/install.rst source/news.rst source/reference.rst \
	source/userguide.rst html/.buildinfo \
	html/_sources/characteristic.txt html/_sources/developer.txt \
	html/_sources/index.txt html/_sources/install.txt \
	html/_sources/news.txt html/_sources/reference.txt \
	html/_sources/userguide.txt html/_static/basic.css \
	html/_static/default.css html/_static/doctools.js \
	html/_static/file.png html/_static/jquery.js \
	html/_static/minus.png html/_static/plus.png \
	html/_static/pygments.css html/_static/searchtools.js \
	html/_static/sidebar.js html/_static/underscore.js \
	html/characteristic.html html/developer.html \
	html/genindex.html html/index.html html/install.html \
	html/news.html html/objects.inv html/reference.html \
	html/search.html html/searchindex.js html/userguide.html
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(doc_jadir)"
DATA = $(nobase_dist_doc_ja_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/kou/work/cpp/mroonga/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/kou/work/cpp/mroonga/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/kou/work/cpp/mroonga/missing --run autoconf
AUTOHEADER = ${SHELL} /home/kou/work/cpp/mroonga/missing --run autoheader
AUTOMAKE = ${SHELL} /home/kou/work/cpp/mroonga/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -g -O2 -Werror
CPP = gcc -E
CPPFLAGS = 
CUTTER = /tmp/local/bin/cutter
CUTTER_CFLAGS = -I/tmp/local/include/cutter  
CUTTER_LIBS = -L/tmp/local/lib -lcutter  
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -g -O2 -Werror -fno-implicit-templates -fno-exceptions -fno-rtti -felide-constructors
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GCUTTER_CFLAGS = -pthread -I/tmp/local/include/cutter -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GCUTTER_LIBS = -pthread -L/tmp/local/lib -lcutter -lgobject-2.0 -lgthread-2.0 -lrt -lglib-2.0  
GREP = /bin/grep
GROONGA_CFLAGS = -I/usr/include/groonga  
GROONGA_LIBS = -lgroonga  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/kou/work/cpp/mroonga/missing --run makeinfo
MECAB_INCLUDES = 
MECAB_LIBS = 
MKDIR_P = /bin/mkdir -p
MYSQL_BUILD = /home/kou/work/cpp/mroonga/../mysql/builddir
MYSQL_INC = -I/home/kou/work/cpp/mroonga/../mysql/sql -I/home/kou/work/cpp/mroonga/../mysql/include -I/home/kou/work/cpp/mroonga/../mysql/regex -I/home/kou/work/cpp/mroonga/../mysql -I/usr/include/mysql
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = groonga-storage-engine
PACKAGE_BUGREPORT = ikdttr@gmail.com
PACKAGE_NAME = groonga-storage-engine
PACKAGE_STRING = groonga-storage-engine 0.3
PACKAGE_TARNAME = groonga-storage-engine
PACKAGE_URL = 
PACKAGE_VERSION = 0.3
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /tmp/local/lib/pkgconfig
RANLIB = ranlib
RSYNC_PATH = packages.groonga.org:/var/www/packages.groonga.org/public
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SPHINX_BUILD = /usr/bin/sphinx-build
STRIP = strip
VERSION = 0.3
abs_builddir = /home/kou/work/cpp/mroonga/doc/ja
abs_srcdir = /home/kou/work/cpp/mroonga/doc/ja
abs_top_builddir = /home/kou/work/cpp/mroonga
abs_top_srcdir = /home/kou/work/cpp/mroonga
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_mysql_config = /usr/bin/mysql_config
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = $(pkgdatadir)/doc
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/kou/work/cpp/mroonga/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
plugindir = /usr/lib/mysql/plugin
prefix = /tmp/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
doc_jadir = $(docdir)/ja

# Makefile for Sphinx documentation
#

# You can set these variables from the command line.
SPHINXOPTS = 
PAPER = 
BUILDDIR = .

# Internal variables.
PAPEROPT_a4 = -D latex_paper_size=a4
PAPEROPT_letter = -D latex_paper_size=letter
# ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) source
ALLSPHINXOPTS = -d $(BUILDDIR)/doctrees $(SPHINXOPTS) source
nobase_dist_doc_ja_DATA = \
	$(source_files)				\
	$(html_files)


# find source -type f -not -name '*.pyc' | sort | sed -e 's,^,\t,g'
source_files = \
	source/characteristic.rst		\
	source/conf.py				\
	source/developer.rst			\
	source/index.rst			\
	source/install.rst			\
	source/news.rst				\
	source/reference.rst			\
	source/userguide.rst


# find html -type f | sort | sed -e 's,^,\t,g'
html_files = \
	html/.buildinfo				\
	html/_sources/characteristic.txt	\
	html/_sources/developer.txt		\
	html/_sources/index.txt			\
	html/_sources/install.txt		\
	html/_sources/news.txt			\
	html/_sources/reference.txt		\
	html/_sources/userguide.txt		\
	html/_static/basic.css			\
	html/_static/default.css		\
	html/_static/doctools.js		\
	html/_static/file.png			\
	html/_static/jquery.js			\
	html/_static/minus.png			\
	html/_static/plus.png			\
	html/_static/pygments.css		\
	html/_static/searchtools.js		\
	html/_static/sidebar.js			\
	html/_static/underscore.js		\
	html/characteristic.html		\
	html/developer.html			\
	html/genindex.html			\
	html/index.html				\
	html/install.html			\
	html/news.html				\
	html/objects.inv			\
	html/reference.html			\
	html/search.html			\
	html/searchindex.js			\
	html/userguide.html

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign doc/ja/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign doc/ja/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nobase_dist_doc_jaDATA: $(nobase_dist_doc_ja_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(doc_jadir)" || $(MKDIR_P) "$(DESTDIR)$(doc_jadir)"
	@list='$(nobase_dist_doc_ja_DATA)'; test -n "$(doc_jadir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(doc_jadir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(doc_jadir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(doc_jadir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(doc_jadir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_dist_doc_jaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_dist_doc_ja_DATA)'; test -n "$(doc_jadir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(doc_jadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(doc_jadir)" && rm -f $$files
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:

#dist-hook:

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(doc_jadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am: html-local

info: info-am

info-am:

install-data-am: install-nobase_dist_doc_jaDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am: pdf-local

ps: ps-am

ps-am:

uninstall-am: uninstall-nobase_dist_doc_jaDATA

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	clean-local dist-hook distclean distclean-generic \
	distclean-libtool distdir dvi dvi-am html html-am html-local \
	info info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-nobase_dist_doc_jaDATA install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am pdf-local ps ps-am uninstall \
	uninstall-am uninstall-nobase_dist_doc_jaDATA


.PHONY: help clean html dirhtml pickle json htmlhelp qthelp latex changes linkcheck doctest

help:
	@echo "Please use \`make <target>' where <target> is one of"
	@echo "  html      to make standalone HTML files"
	@echo "  dirhtml   to make HTML files named index.html in directories"
	@echo "  pickle    to make pickle files"
	@echo "  json      to make JSON files"
	@echo "  htmlhelp  to make HTML files and a HTML help project"
	@echo "  qthelp    to make HTML files and a qthelp project"
	@echo "  latex     to make LaTeX files, you can set PAPER=a4 or PAPER=letter"
	@echo "  changes   to make an overview of all changed/added/deprecated items"
	@echo "  linkcheck to check all external links for integrity"
	@echo "  doctest   to run all doctests embedded in the documentation (if enabled)"

clean-local:
	-rm -rf $(BUILDDIR)/doctree
	-rm -rf $(BUILDDIR)/html
	-rm -rf $(BUILDDIR)/dirhtml
	-rm -rf $(BUILDDIR)/pickle
	-rm -rf $(BUILDDIR)/json
	-rm -rf $(BUILDDIR)/htmlhelp
	-rm -rf $(BUILDDIR)/qthelp
	-rm -rf $(BUILDDIR)/latex
	-rm -rf $(BUILDDIR)/changes
	-rm -rf $(BUILDDIR)/linkcheck
	-rm -rf $(BUILDDIR)/doctest
	-rm -rf $(BUILDDIR)/pdf

html-local:
	$(SPHINX_BUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
	@echo
	@echo "Build finished. The HTML pages are in $(BUILDDIR)/html."

dirhtml:
	$(SPHINX_BUILD) -b dirhtml $(ALLSPHINXOPTS) $(BUILDDIR)/dirhtml
	@echo
	@echo "Build finished. The HTML pages are in $(BUILDDIR)/dirhtml."

pickle:
	$(SPHINX_BUILD) -b pickle $(ALLSPHINXOPTS) $(BUILDDIR)/pickle
	@echo
	@echo "Build finished; now you can process the pickle files."

json:
	$(SPHINX_BUILD) -b json $(ALLSPHINXOPTS) $(BUILDDIR)/json
	@echo
	@echo "Build finished; now you can process the JSON files."

htmlhelp:
	$(SPHINX_BUILD) -b htmlhelp $(ALLSPHINXOPTS) $(BUILDDIR)/htmlhelp
	@echo
	@echo "Build finished; now you can run HTML Help Workshop with the" \
	      ".hhp project file in $(BUILDDIR)/htmlhelp."

qthelp:
	$(SPHINX_BUILD) -b qthelp $(ALLSPHINXOPTS) $(BUILDDIR)/qthelp
	@echo
	@echo "Build finished; now you can run "qcollectiongenerator" with the" \
	      ".qhcp project file in $(BUILDDIR)/qthelp, like this:"
	@echo "# qcollectiongenerator $(BUILDDIR)/qthelp/groonga.qhcp"
	@echo "To view the help file:"
	@echo "# assistant -collectionFile $(BUILDDIR)/qthelp/groonga.qhc"

latex:
	$(SPHINX_BUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
	@echo
	@echo "Build finished; the LaTeX files are in $(BUILDDIR)/latex."
	@echo "Run \`make all-pdf' or \`make all-ps' in that directory to" \
	      "run these through (pdf)latex."

changes:
	$(SPHINX_BUILD) -b changes $(ALLSPHINXOPTS) $(BUILDDIR)/changes
	@echo
	@echo "The overview file is in $(BUILDDIR)/changes."

linkcheck:
	$(SPHINX_BUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck
	@echo
	@echo "Link check complete; look for any errors in the above output " \
	      "or in $(BUILDDIR)/linkcheck/output.txt."

doctest:
	$(SPHINX_BUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest
	@echo "Testing of doctests in the sources finished, look at the " \
	      "results in $(BUILDDIR)/doctest/output.txt."

pdf-local:
	$(SPHINX_BUILD) -b pdf $(ALLSPHINXOPTS) $(BUILDDIR)/pdf
	@echo
	@echo "Build finished. The PDF files are in $(BUILDDIR)/pdf."

dist-hook:
	@touch $(distdir)/html-build-stamp

$(html_files): html-build-stamp
html-build-stamp:
	$(MAKE) html

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
